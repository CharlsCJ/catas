<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CataExpress - Catas a Domicilio</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            text-align: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            color: white;
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        .header p {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.2em;
        }

        .nav-tabs {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 10px;
            backdrop-filter: blur(10px);
        }

        .nav-tab {
            padding: 12px 25px;
            margin: 0 5px;
            background: transparent;
            border: none;
            border-radius: 10px;
            color: white;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 16px;
        }

        .nav-tab:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .nav-tab.active {
            background: rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .tab-content {
            display: none;
            animation: fadeIn 0.5s ease-in-out;
        }

        .tab-content.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }

        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .service-card {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
        }

        .service-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
        }

        .service-card h3 {
            font-size: 1.5em;
            margin-bottom: 15px;
        }

        .service-card .price {
            font-size: 2em;
            font-weight: bold;
            color: #ffd700;
            margin: 10px 0;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 10px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
        }

        .btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
        }

        .reservations-list {
            max-height: 400px;
            overflow-y: auto;
        }

        .reservation-item {
            background: #f8f9fa;
            border-left: 4px solid #667eea;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .reservation-item:hover {
            background: #e9ecef;
            transform: translateX(5px);
        }

        .reservation-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .reservation-date {
            font-weight: bold;
            color: #667eea;
        }

        .reservation-status {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
        }

        .status-pendiente {
            background: #fff3cd;
            color: #856404;
        }

        .status-confirmada {
            background: #d4edda;
            color: #155724;
        }

        .status-completada {
            background: #d1ecf1;
            color: #0c5460;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 20px;
            width: 90%;
            max-width: 600px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            animation: modalSlideIn 0.3s ease;
        }

        @keyframes modalSlideIn {
            from { transform: translateY(-50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .close:hover {
            color: #000;
        }

        .admin-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            color: white;
            padding: 20px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
        }

        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .responsive-table {
            overflow-x: auto;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .table th,
        .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .table th {
            background: #f8f9fa;
            font-weight: bold;
        }

        @media (max-width: 768px) {
            .services-grid {
                grid-template-columns: 1fr;
            }
            
            .nav-tabs {
                flex-direction: column;
                gap: 10px;
            }
            
            .admin-stats {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üç∑ CataExpress</h1>
            <p>Experiencias √∫nicas de cata en la comodidad de tu hogar</p>
        </div>

        <div class="nav-tabs">
            <button class="nav-tab active" onclick="showTab('servicios')">üç∑ Servicios</button>
            <button class="nav-tab" onclick="showTab('reservar')">üìÖ Reservar</button>
            <button class="nav-tab" onclick="showTab('reservaciones')">üìã Mis Reservas</button>
            <button class="nav-tab" onclick="showTab('admin')">‚öôÔ∏è Admin</button>
        </div>

        <!-- Tab Servicios -->
        <div id="servicios" class="tab-content active">
            <div class="card">
                <h2 style="text-align: center; margin-bottom: 30px; color: #333;">üç∑ Nuestros Servicios</h2>
                <div class="services-grid">
                    <div class="service-card" onclick="selectService('vinos')">
                        <h3>üç∑ Cata de Vinos</h3>
                        <p>Degustaci√≥n de vinos seleccionados con sommelier profesional</p>
                        <div class="price">$1,200</div>
                        <p>4-8 personas ‚Ä¢ 2 horas</p>
                    </div>
                    <div class="service-card" onclick="selectService('quesos')">
                        <h3>üßÄ Cata de Quesos</h3>
                        <p>Selecci√≥n de quesos artesanales nacionales e internacionales</p>
                        <div class="price">$800</div>
                        <p>4-10 personas ‚Ä¢ 1.5 horas</p>
                    </div>
                    <div class="service-card" onclick="selectService('cervezas')">
                        <h3>üç∫ Cata de Cervezas</h3>
                        <p>Degustaci√≥n de cervezas artesanales y especiales</p>
                        <div class="price">$600</div>
                        <p>4-12 personas ‚Ä¢ 2 horas</p>
                    </div>
                    <div class="service-card" onclick="selectService('premium')">
                        <h3>‚≠ê Experiencia Premium</h3>
                        <p>Cata completa: vinos, quesos y maridajes especiales</p>
                        <div class="price">$2,000</div>
                        <p>4-8 personas ‚Ä¢ 3 horas</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tab Reservar -->
        <div id="reservar" class="tab-content">
            <div class="card">
                <h2 style="text-align: center; margin-bottom: 30px; color: #333;">üìÖ Reserva tu Cata</h2>
                <form id="reservationForm">
                    <div class="form-group">
                        <label for="servicio">Tipo de Servicio:</label>
                        <select id="servicio" name="servicio" required>
                            <option value="">Selecciona un servicio</option>
                            <option value="vinos">Cata de Vinos - $1,200</option>
                            <option value="quesos">Cata de Quesos - $800</option>
                            <option value="cervezas">Cata de Cervezas - $600</option>
                            <option value="premium">Experiencia Premium - $2,000</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="nombre">Nombre Completo:</label>
                        <input type="text" id="nombre" name="nombre" required>
                    </div>
                    <div class="form-group">
                        <label for="telefono">Tel√©fono:</label>
                        <input type="tel" id="telefono" name="telefono" required>
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input type="email" id="email" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="direccion">Direcci√≥n:</label>
                        <textarea id="direccion" name="direccion" rows="3" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="fecha">Fecha:</label>
                        <input type="date" id="fecha" name="fecha" required>
                    </div>
                    <div class="form-group">
                        <label for="hora">Hora:</label>
                        <select id="hora" name="hora" required>
                            <option value="">Selecciona una hora</option>
                            <option value="16:00">4:00 PM</option>
                            <option value="17:00">5:00 PM</option>
                            <option value="18:00">6:00 PM</option>
                            <option value="19:00">7:00 PM</option>
                            <option value="20:00">8:00 PM</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="personas">N√∫mero de Personas:</label>
                        <input type="number" id="personas" name="personas" min="4" max="12" required>
                    </div>
                    <div class="form-group">
                        <label for="comentarios">Comentarios Especiales:</label>
                        <textarea id="comentarios" name="comentarios" rows="3" placeholder="Alergias, preferencias, ocasi√≥n especial..."></textarea>
                    </div>
                    <button type="submit" class="btn">Reservar Cata</button>
                </form>
            </div>
        </div>

        <!-- Tab Reservaciones -->
        <div id="reservaciones" class="tab-content">
            <div class="card">
                <h2 style="text-align: center; margin-bottom: 30px; color: #333;">üìã Mis Reservaciones</h2>
                <div class="form-group">
                    <label for="buscarReserva">Buscar por tel√©fono o email:</label>
                    <input type="text" id="buscarReserva" placeholder="Ingresa tu tel√©fono o email">
                    <button type="button" class="btn" onclick="buscarReservaciones()" style="margin-top: 10px;">Buscar</button>
                </div>
                <div id="reservationsList" class="reservations-list">
                    <p style="text-align: center; color: #666;">Ingresa tu informaci√≥n para ver tus reservaciones</p>
                </div>
            </div>
        </div>

        <!-- Tab Admin -->
        <div id="admin" class="tab-content">
            <div class="card">
                <h2 style="text-align: center; margin-bottom: 30px; color: #333;">‚öôÔ∏è Panel de Administraci√≥n</h2>
                <div class="admin-stats">
                    <div class="stat-card">
                        <div class="stat-number" id="totalReservaciones">0</div>
                        <div>Total Reservaciones</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="reservacionesHoy">0</div>
                        <div>Reservaciones Hoy</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number" id="ingresosMes">$0</div>
                        <div>Ingresos del Mes</div>
                    </div>
                </div>
                <div class="responsive-table">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Fecha</th>
                                <th>Cliente</th>
                                <th>Servicio</th>
                                <th>Personas</th>
                                <th>Estado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody id="adminReservationsList">
                            <tr>
                                <td colspan="6" style="text-align: center; color: #666;">No hay reservaciones registradas</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2 id="modalTitle">T√≠tulo</h2>
            <div id="modalBody">Contenido del modal</div>
        </div>
    </div>

    <script>
        // Variables globales
        let reservaciones = JSON.parse(localStorage.getItem('reservaciones')) || [];
        let reservationCounter = parseInt(localStorage.getItem('reservationCounter')) || 1;

        // Precios de servicios
        const precios = {
            'vinos': 1200,
            'quesos': 800,
            'cervezas': 600,
            'premium': 2000
        };

        // Funci√≥n para mostrar tabs
        function showTab(tabName) {
            // Ocultar todas las tabs
            const tabs = document.querySelectorAll('.tab-content');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // Mostrar la tab seleccionada
            document.getElementById(tabName).classList.add('active');
            
            // Actualizar botones
            const buttons = document.querySelectorAll('.nav-tab');
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');
            
            // Actualizar estad√≠sticas si es admin
            if (tabName === 'admin') {
                updateAdminStats();
            }
        }

        // Funci√≥n para seleccionar servicio
        function selectService(serviceType) {
            showTab('reservar');
            document.getElementById('servicio').value = serviceType;
            
            // Actualizar bot√≥n de reservar
            setTimeout(() => {
                document.querySelector('.nav-tab:nth-child(2)').click();
            }, 100);
        }

        // Configurar fecha m√≠nima (hoy)
        document.getElementById('fecha').min = new Date().toISOString().split('T')[0];

        // Manejar formulario de reservaci√≥n
        document.getElementById('reservationForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const reservacion = {
                id: reservationCounter++,
                servicio: formData.get('servicio'),
                nombre: formData.get('nombre'),
                telefono: formData.get('telefono'),
                email: formData.get('email'),
                direccion: formData.get('direccion'),
                fecha: formData.get('fecha'),
                hora: formData.get('hora'),
                personas: formData.get('personas'),
                comentarios: formData.get('comentarios'),
                estado: 'pendiente',
                fechaCreacion: new Date().toISOString()
            };
            
            reservaciones.push(reservacion);
            localStorage.setItem('reservaciones', JSON.stringify(reservaciones));
            localStorage.setItem('reservationCounter', reservationCounter.toString());
            
            // Mostrar confirmaci√≥n
            showModal('¬°Reservaci√≥n Exitosa!', 
                `<p>Tu reservaci√≥n ha sido registrada con √©xito.</p>
                 <p><strong>ID de reservaci√≥n:</strong> ${reservacion.id}</p>
                 <p><strong>Fecha:</strong> ${reservacion.fecha} a las ${reservacion.hora}</p>
                 <p><strong>Servicio:</strong> ${getServiceName(reservacion.servicio)}</p>
                 <p>Te contactaremos pronto para confirmar los detalles.</p>`
            );
            
            // Limpiar formulario
            this.reset();
        });

        // Funci√≥n para obtener nombre del servicio
        function getServiceName(serviceType) {
            const nombres = {
                'vinos': 'Cata de Vinos',
                'quesos': 'Cata de Quesos',
                'cervezas': 'Cata de Cervezas',
                'premium': 'Experiencia Premium'
            };
            return nombres[serviceType] || serviceType;
        }

        // Funci√≥n para buscar reservaciones
        function buscarReservaciones() {
            const busqueda = document.getElementById('buscarReserva').value.toLowerCase();
            const reservacionesUsuario = reservaciones.filter(r => 
                r.telefono.toLowerCase().includes(busqueda) || 
                r.email.toLowerCase().includes(busqueda)
            );
            
            displayReservaciones(reservacionesUsuario);
        }

        // Funci√≥n para mostrar reservaciones
        function displayReservaciones(reservacionesList) {
            const container = document.getElementById('reservationsList');
            
            if (reservacionesList.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: #666;">No se encontraron reservaciones</p>';
                return;
            }
            
            container.innerHTML = reservacionesList.map(reservacion => `
                <div class="reservation-item">
                    <div class="reservation-header">
                        <span class="reservation-date">${reservacion.fecha} - ${reservacion.hora}</span>
                        <span class="reservation-status status-${reservacion.estado}">
                            ${reservacion.estado.toUpperCase()}
                        </span>
                    </div>
                    <div>
                        <strong>ID:</strong> ${reservacion.id} | 
                        <strong>Servicio:</strong> ${getServiceName(reservacion.servicio)} | 
                        <strong>Personas:</strong> ${reservacion.personas}
                    </div>
                    <div style="margin-top: 10px;">
                        <strong>Direcci√≥n:</strong> ${reservacion.direccion}
                    </div>
                </div>
            `).join('');
        }

        // Funci√≥n para actualizar estad√≠sticas admin
        function updateAdminStats() {
            const hoy = new Date().toISOString().split('T')[0];
            const mesActual = new Date().toISOString().slice(0, 7);
            
            document.getElementById('totalReservaciones').textContent = reservaciones.length;
            document.getElementById('reservacionesHoy').textContent = 
                reservaciones.filter(r => r.fecha === hoy).length;
            
            const ingresosMes = reservaciones
                .filter(r => r.fecha.startsWith(mesActual))
                .reduce((total, r) => total + precios[r.servicio], 0);
            
            document.getElementById('ingresosMes').textContent = `$${ingresosMes.toLocaleString()}`;
            
            // Actualizar tabla de reservaciones
            updateAdminTable();
        }

        // Funci√≥n para actualizar tabla de admin
        function updateAdminTable() {
            const tbody = document.getElementById('adminReservationsList');
            
            if (reservaciones.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" style="text-align: center; color: #666;">No hay reservaciones registradas</td></tr>';
                return;
            }
            
            tbody.innerHTML = reservaciones.map(reservacion => `
                <tr>
                    <td>${reservacion.fecha} ${reservacion.hora}</td>
                    <td>${reservacion.nombre}</td>
                    <td>${getServiceName(reservacion.servicio)}</td>
                    <td>${reservacion.personas}</td>
                    <td>
                        <span class="reservation-status status-${reservacion.estado}">
                            ${reservacion.estado.toUpperCase()}
                        </span>
                    </td>
                    <td>
                        <button class="btn btn-secondary" onclick="cambiarEstado(${reservacion.id})" 
                                style="padding: 5px 10px; font-size: 12px;">
                            Cambiar Estado
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // Funci√≥n para cambiar estado de reservaci√≥n
        function cambiarEstado(id) {
            const reservacion = reservaciones.find(r => r.id === id);
            if (!reservacion) return;
            
            const estados = ['pendiente', 'confirmada', 'completada'];
            const currentIndex = estados.indexOf(reservacion.estado);
            const nextIndex = (currentIndex + 1) % estados.length;
            
            reservacion.estado = estados[nextIndex];
            localStorage.setItem('reservaciones', JSON.stringify(reservaciones));
            
            updateAdminStats();
        }

        // Funci√≥n para mostrar modal
        function showModal(title, body) {
            document.getElementById('modalTitle').textContent = title;
            document.getElementById('modalBody').innerHTML = body;
            document.getElementById('modal').style.display = 'block';
        }

        // Funci√≥n para cerrar modal
        function closeModal() {
            document.getElementById('modal').style.display = 'none';
        }

        // Cerrar modal al hacer clic fuera
        window.onclick = function(event) {
            const modal = document.getElementById('modal');
            if (event.target === modal) {
                closeModal();
            }
        }

        // Inicializar aplicaci√≥n
        document.addEventListener('DOMContentLoaded', function() {
            updateAdminStats();
        });
    </script>
</body>
</html>
